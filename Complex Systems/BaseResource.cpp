#include "BaseResource.h"
#include "ComplexSystemsApp.h"

/************************************************************************************************************
************************************************************************************************************/
BaseResource::BaseResource(glm::vec2 position, GameManager::ObjectType type) : SceneObject (position, type) {

}

/************************************************************************************************************
************************************************************************************************************/
BaseResource::BaseResource(glm::vec2 position, GameManager::ObjectType type, glm::vec4 colour, float radius) : SceneObject(position, type, colour, radius) {
}

/************************************************************************************************************
************************************************************************************************************/
BaseResource::~BaseResource() {

}

/************************************************************************************************************
************************************************************************************************************/
void BaseResource::update() {
    SceneObject::update();

    m_quantity += m_regrowth;
}

/************************************************************************************************************
************************************************************************************************************/
void BaseResource::draw(aie::Renderer2D* renderer) {
    SceneObject::draw(renderer);
}

/************************************************************************************************************
************************************************************************************************************/
float BaseResource::consume() {
    if (m_quantity - m_gathering * ComplexSystemsApp::getDeltaTime() < 0) {
        float temp = 0;
        temp = m_quantity;
        m_quantity = 0;
        return temp;
    }
    else {
        m_quantity -= m_gathering * ComplexSystemsApp::getDeltaTime();
        return m_gathering * ComplexSystemsApp::getDeltaTime();
    }
}
