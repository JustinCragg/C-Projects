#include "Piece.h"
#include "Board.h"
#include "Temp.h"
#include "Point.h"
#include <vector>
/****************************************************************************************************
****************************************************************************************************/
Piece::Piece(){
}

/****************************************************************************************************
****************************************************************************************************/
Piece::Piece(bool player, Point pos) {
}

/****************************************************************************************************
****************************************************************************************************/
std::string Piece::getChar()const {
    return m_char;
}

/****************************************************************************************************
****************************************************************************************************/
Point Piece::getPos()const {
    return m_pos;
}

/****************************************************************************************************
****************************************************************************************************/
int Piece::getPlayerTeam()const {
    return m_playerTeam;
}

/****************************************************************************************************
****************************************************************************************************/
bool Piece::getRemoved()const {
    return m_removed;
}

/****************************************************************************************************
****************************************************************************************************/
void Piece::makeMove(Point destination, bool sim) {
    // Removes the piece if it will be taken
    if (sim == false) {
        if (BOARD.getSquare(destination) != " ") {
            BOARD.getPieceAtPoint(destination)->remove();
        }
    }
    else {
        if (TEMP_BOARD.getSquare(destination) != " ") {
            TEMP_BOARD.getPieceAtPoint(destination)->remove();
        }
    }
    // Set new 'pos'
    m_pos = destination;
}

/****************************************************************************************************
****************************************************************************************************/
void Piece::move(std::vector<Point> & moves, bool sim) {
    return;
}

/****************************************************************************************************
****************************************************************************************************/
void Piece::remove() {
    m_removed = true;
    m_pos = Point{ -1,-1 };
}